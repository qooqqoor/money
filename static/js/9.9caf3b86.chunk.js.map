{"version":3,"sources":["Views/Title/index.js"],"names":["useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","background","down","itemBox","borderRadius","boxShadow","margin","overflow","ResponsiveDrawer","props","window","children","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","map","text","index","button","key","primary","container","undefined","document","body","position","color","aria-label","edge","onClick","variant","noWrap","mdUp","implementation","anchor","direction","open","onClose","paper","ModalProps","keepMounted","smDown"],"mappings":"2TAuBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAGbC,OAAO,eACFH,EAAMI,YAAYC,GAAG,MAAQ,CAC1BC,MATQ,IAURC,WAAY,IAGpBC,OAAO,eACFR,EAAMI,YAAYC,GAAG,MAAQ,CAC1BC,MAAM,eAAD,OAfG,IAeH,OACLG,WAhBQ,MAmBhBC,WAAW,aACPC,YAAaX,EAAMY,QAAQ,IAC1BZ,EAAMI,YAAYC,GAAG,MAAQ,CAC1BH,QAAS,SAKjBW,QAASb,EAAMc,OAAOD,QACtBE,YAAa,CACTT,MA7BY,KA+BhBU,QAAQ,aACJC,SAAU,EACVC,QAASlB,EAAMY,QAAQ,GACvBO,WAAY,WAEXnB,EAAMI,YAAYgB,KAAK,MAAQ,CAE5BF,QAASlB,EAAMY,QAAQ,OAI/BS,QAAQ,aAEJH,QAAS,QACTC,WAAY,UACZG,aAAc,MACdC,UAAW,oCACXC,OAAQxB,EAAMY,QAAQ,GACtBa,SAAU,UAETzB,EAAMI,YAAYgB,KAAK,MAAQ,CAC5BI,OAAQ,EACRN,QAAS,cAmHNQ,UA1Gf,SAA0BC,GAAQ,IACtBC,EAAoBD,EAApBC,OAAOC,EAAaF,EAAbE,SACTC,EAAUhC,IACVE,EAAQ+B,cAHe,EAIOC,IAAMC,UAAS,GAJtB,mBAItBC,EAJsB,KAIVC,EAJU,KAMvBC,EAAqB,WACvBD,GAAeD,IAGb/B,EACF,6BACI,yBAAKkC,UAAWP,EAAQjB,UACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,KACK,CAAC,QAAS,UAAW,aAAc,UAAUyB,KAAI,SAACC,EAAMC,GAAP,OAC9C,kBAAC,IAAD,CAAUC,QAAM,EAACC,IAAKH,GAClB,kBAAC,IAAD,KAAeC,EAAQ,IAAM,EAAI,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OACjD,kBAAC,IAAD,CAAcG,QAASJ,SAInC,kBAAC,IAAD,MACA,kBAAC,IAAD,KACK,CAAC,WAAY,QAAS,QAAQD,KAAI,SAACC,EAAMC,GAAP,OAC/B,kBAAC,IAAD,CAAUC,QAAM,EAACC,IAAKH,GAClB,kBAAC,IAAD,KAAeC,EAAQ,IAAM,EAAI,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OACjD,kBAAC,IAAD,CAAcG,QAASJ,UAOrCK,OAAuBC,IAAXjB,EAAuB,kBAAMA,IAASkB,SAASC,WAAOF,EAExE,OACI,yBAAKR,UAAWP,EAAQ7B,MACpB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQ+C,SAAS,QAAQX,UAAWP,EAAQtB,QACxC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIyC,MAAM,UACNC,aAAW,cACXC,KAAK,QACLC,QAAShB,EACTC,UAAWP,EAAQpB,YAEnB,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CAAY2C,QAAQ,KAAKC,QAAM,GAA/B,uBAKR,yBAAKjB,UAAWP,EAAQ3B,OAAQ+C,aAAW,mBAEvC,kBAAC,IAAD,CAAQK,MAAI,EAACC,eAAe,OACxB,kBAAC,IAAD,CACIZ,UAAWA,EACXS,QAAQ,YACRI,OAA4B,QAApBzD,EAAM0D,UAAsB,QAAU,OAC9CC,KAAMzB,EACN0B,QAASxB,EACTN,QAAS,CACL+B,MAAO/B,EAAQf,aAEnB+C,WAAY,CACRC,aAAa,IAGhB5D,IAGT,kBAAC,IAAD,CAAQ6D,QAAM,EAACR,eAAe,OAC1B,kBAAC,IAAD,CACI1B,QAAS,CACL+B,MAAO/B,EAAQf,aAEnBsC,QAAQ,YACRM,MAAI,GAEHxD,KAIb,0BAAMkC,UAAWP,EAAQd,SACrB,yBAAKqB,UAAWP,EAAQjB,UACxB,yBAAKwB,UAAWP,EAAQT,SACnBQ","file":"static/js/9.9caf3b86.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Link} from \"react-router-dom\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        background: '#f0f0f0',\r\n\r\n        [theme.breakpoints.down('xs')]: {\r\n\r\n            padding: theme.spacing(1.5),\r\n        }\r\n\r\n    },\r\n    itemBox: {\r\n\r\n        padding: '2% 5%',\r\n        background: '#fafafa',\r\n        borderRadius: '5px',\r\n        boxShadow: '1px 1px 3px rgba(100,100,100,0.3)',\r\n        margin: theme.spacing(3),\r\n        overflow: 'hidden',\r\n\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: 0,\r\n            padding: '1% 3%',\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n    const { window,children } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Responsive drawer\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden mdUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden smDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <div className={classes.itemBox}>\r\n                    {children}\r\n                </div>\r\n\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;"],"sourceRoot":""}